vars: {
  scala213-bin-version: "2.13"
  scala213-version: ${vars.scala213-bin-version}".0-M5"

  scala212-bin-version: "2.12"
  scala212-version: ${vars.scala212-bin-version}".8"
  scala212-xml-version: "1.0.6"
  scala212-par-comb-version: "1.0.7"

  scala211-bin-version: "2.11"
  scala211-version: ${vars.scala211-bin-version}".12"
  scala211-xml-version: "1.0.5"
  scala211-par-comb-version: "1.0.4"

  scala210-bin-version: "2.10"
  scala210-version: ${vars.scala210-bin-version}".7"

  sbt: {
    uri:    "https://github.com/sbt/sbt.git#"${vars.sbtVersion}
    set-version-suffix: ${vars.versionSuffix}
    extra.skip-missing-tests: true
    extra.test-tasks: [ test ] //, scripted ]
    extra.commands: [ "set scriptedLaunchOpts ++= Seq(\"-Dsbt.override.build.repos=true\", (\"-Dsbt.repository.config=\"+(baseDirectory.value.getAbsolutePath())+\"/.dbuild/repositories\"), (\"-Dsbt.ivy.home=\"+(baseDirectory.value.getAbsolutePath())+\"/.dbuild/ivy2\"))",
                      "set bintrayRelease in Global := ((): Unit)",
                      "project vscodePlugin",
                      "set bintrayEnsureBintrayPackageExists := ((): Unit)",
    // restore sbt-launch to the standard publish task
                      "project bundledLauncherProj","set publish := sbt.Classpaths.publishTask(publishConfiguration, deliver).value" ]
    extra.sbt-version: ${vars.sbtBuilderVersion}
  }
  zinc: {
    uri:    "https://github.com/sbt/zinc.git#"${vars.zincVersion}
    set-version-suffix: ${vars.versionSuffix}
    extra.test-tasks: [ test, scripted ]
    extra.run-tests: false
    extra.sbt-version: ${vars.sbtBuilderVersion}
  }
  io: {
    uri:    "https://github.com/sbt/io.git#"${vars.ioVersion}
    set-version-suffix: ${vars.versionSuffix}
    extra.test-tasks: [ test ] // there are no scripted tests in sbt/io
    extra.skip-missing-tests: true
    extra.sbt-version: ${vars.sbtBuilderVersion}
  }
  util: {
    uri:    "https://github.com/sbt/util.git#"${vars.utilVersion}
    set-version-suffix: ${vars.versionSuffix}
    extra.test-tasks: [ test ] // there are no scripted tests in sbt/util
    extra.skip-missing-tests: true
    extra.sbt-version: ${vars.sbtBuilderVersion}
  }
  lib: {
    uri:    "https://github.com/sbt/librarymanagement.git#"${vars.librarymanagementVersion}
    set-version-suffix: ${vars.versionSuffix}
    extra.test-tasks: [ test ] // there are no scripted tests in sbt/util
    extra.skip-missing-tests: true
    extra.sbt-version: ${vars.sbtBuilderVersion}
  }
}
