vars.sbtBuild211: {
  check-missing: [ false, false ]
  cross-version: [ standard, standard ]
  space.from: [ sbt211, sbtplugins211 ]
  space.to: sbt211
  sbt-version: "1.0.0-M6"
  extraction-version: ${vars.scala211-version}

  projects: [
    {
      name: scala-211
      system: assemble
      extra.parts.cross-version: standard
      extra.parts.projects: [
        {
          set-version: ${vars.scala211-version}
          name:   scala211-library
          system: aether
          uri:   "aether:org.scala-lang#scala-library;"${vars.scala211-version}
          extra.sources: true  // Scala.js wants this
        }
        {
          set-version: ${vars.scala211-version}
          name:   scala211-reflect
          system: aether
          uri:   "aether:org.scala-lang#scala-reflect;"${vars.scala211-version}
        }
        {
          set-version: ${vars.scala211-version}
          name:   scala211-compiler
          system: aether
          uri:   "aether:org.scala-lang#scala-compiler;"${vars.scala211-version}
        }
        {
          set-version: ${vars.scala211-xml-version}
          name:   scala211-xml
          system: aether
          uri:   "aether:org.scala-lang.modules#scala-xml_"${vars.scala211-bin-version}";"${vars.scala211-xml-version}
        }
        {
          set-version: ${vars.scala211-par-comb-version}
          name:   scala211-par-comb
          system: aether
          uri:   "aether:org.scala-lang.modules#scala-parser-combinators_"${vars.scala211-bin-version}";"${vars.scala211-par-comb-version}
        }
      ]
    }
    ${vars.sbt}     { name: sbt211 }
    ${vars.io}      { name: sbt211-io }
    ${vars.util}    { name: sbt211-util }
    ${vars.lib}     { name: sbt211-librarymanagement }
    ${vars.web}     { name: sbt211-website }
    ${vars.zinc}    { name: sbt211-zinc }
  ]
}

vars.deploy211: {
  projects: [ sbt211, sbt211-io, sbt211-util, sbt211-librarymanagement, sbt211-website, sbt211-zinc ]
  uri: ${vars.deployUri}
  credentials: ${vars.deployCredentials}
} 


