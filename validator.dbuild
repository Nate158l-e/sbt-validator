//These commented lines below are inserted by the sbt validator as needed.
//See: https://jenkins.scala-sbt.org:8592/job/sbt%20validator/
//
//include file("212.conf")
//include file("211.conf")
//include file("210.conf")
//options.deploy: []
//options.deploy: [ ${?vars.localDeploy212}, ${?vars.localDeploy211}, ${?vars.localDeploy210} ] ${options.deploy}
//options.deploy: [ ${?vars.bintrayDeploy212}, ${?vars.bintrayDeploy211}, ${?vars.bintrayDeploy210} ]  ${options.deploy}
//options.deploy: [ ${?vars.artifactoryDeploy212}, ${?vars.artifactoryDeploy211}, ${?vars.artifactoryDeploy210} ]  ${options.deploy}

vars: {
  scala212-bin-version: "2.12"
  scala212-version: ${vars.scala212-bin-version}".2"
  scala212-xml-version: "1.0.6"
  scala212-par-comb-version: "1.0.5"

  scala211-bin-version: "2.11"
  scala211-version: ${vars.scala211-bin-version}".8"
  scala211-xml-version: "1.0.5"
  scala211-par-comb-version: "1.0.4"

  scala210-bin-version: "2.10"
  scala210-version: ${vars.scala210-bin-version}".6"

  // if $SPACE_PREFIX is undefined, or "", then dbuild will compile
  // all subprojects on top of each other. If it is anything else,
  // each subproject's artifacts will end up in a dummy space, therefore
  // they will all be in practice compiled in isolation, using the
  // dependencies defined in each of the subprojects.
  space-to-prefix: ""
  space-to-prefix: ${?SPACE_PREFIX}

  sbt: {
    uri:    "https://github.com/sbt/sbt.git#"${sbt}
    set-version-suffix: ${TIMESTAMP}
    extra.skip-missing-tests: true
    extra.test-tasks: [ test ]
//    extra.test-tasks: [ test, scripted ]
    // restore sbt-launch to the standard publish task
    extra.commands: [ "project bundledLauncherProj","set publish := sbt.Classpaths.publishTask(publishConfiguration, deliver).value" ]
  }
  zinc: {
    uri:    "https://github.com/sbt/zinc.git#"${zinc}
    set-version-suffix: ${TIMESTAMP}
    extra.test-tasks: [ test, scripted ]
    extra.run-tests: false
  }
  io: {
    uri:    "https://github.com/sbt/io.git#"${io}
    set-version-suffix: ${TIMESTAMP}
    extra.test-tasks: [ test, scripted ]
    extra.skip-missing-tests: true
  }
  util: {
    uri:    "https://github.com/sbt/util.git#"${util}
    set-version-suffix: ${TIMESTAMP}
    extra.test-tasks: [ test, scripted ]
    extra.skip-missing-tests: true
  }
  lib: {
    uri:    "https://github.com/sbt/librarymanagement.git#"${librarymanagement}
    set-version-suffix: ${TIMESTAMP}
    extra.test-tasks: [ test, scripted ]
    extra.skip-missing-tests: true
  }

  bintrayDeployUri: "bintray:/sbt/maven-snapshots/jenkins-sbt/"${TIMESTAMP}"#release"
  bintrayDeployCredentials: "/home/jenkinssbt/.bintray/.credentials"

# Currently not deploying to Artifactory
#  artifactoryDeployUri: "https://proxy-ch.typesafe.com:8082/artifactory/sbt-snapshots"
#  artifactoryDeployCredentials: "/home/jenkinssbt/...../.credentials"

  localDeployUri: "file:///home/jenkinssbt/sbt-snapshots"
}

build: [ ${?vars.sbtBuild212}, ${?vars.sbtBuild211}, ${?vars.sbtBuild210} ]

options.resolvers: {
  "R0000" : "local"
  "R0001" : "proxy-ch-maven: https://proxy-ch.typesafe.com:8082/artifactory/repo"
  "R0002" : "proxy-ch-ivy: https://proxy-ch.typesafe.com:8082/artifactory/repo, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]"
}
