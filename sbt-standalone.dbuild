vars.scala-bin-version: "2.12"
vars.scala-version: ${vars.scala-bin-version}".1"
vars.scala-xml-version: "1.0.6"

build: {
  check-missing: [ false, false ]
  cross-version: [ standard, standard ]
  space.from: [ sbt, sbtplugins ]
  space.to: sbt
  sbt-version: "0.13.13"
  extraction-version: ${vars.scala-version}

  projects: [
    {
      name: scala
      system: assemble
      extra.parts.cross-version: standard
      extra.parts.projects: [
        {
          set-version: ${vars.scala-version}
          name:   scala-library
          system: aether
          uri:   "aether:org.scala-lang#scala-library;"${vars.scala-version}
          extra.sources: true  // Scala.js wants this
        }
        {
          set-version: ${vars.scala-version}
          name:   scala-reflect
          system: aether
          uri:   "aether:org.scala-lang#scala-reflect;"${vars.scala-version}
        }
        {
          set-version: ${vars.scala-version}
          name:   scala-compiler
          system: aether
          uri:   "aether:org.scala-lang#scala-compiler;"${vars.scala-version}
        }
        {
          set-version: ${vars.scala-xml-version}
          name:   scala-xml
          system: aether
          uri:   "aether:org.scala-lang.modules#scala-xml_"${vars.scala-bin-version}";"${vars.scala-xml-version}
        }
      ]
    }
    {
      name:   sbt
      uri:    "https://github.com/sbt/sbt.git#1.0.x"
      set-version-suffix: ${TIMESTAMP}
      extra.run-tests: false
      // restore sbt-launch to the standard publish task
      extra.commands: [ "project bundledLauncherProj","set publish := sbt.Classpaths.publishTask(publishConfiguration, deliver).value" ]
    }
    {
      name:   zinc
      uri:    "https://github.com/sbt/zinc.git#1.0"
      set-version-suffix: ${TIMESTAMP}
      extra.run-tests: false
    }
    {
      name:   sbt-io
      uri:    "https://github.com/sbt/io.git#1.0"
      set-version-suffix: ${TIMESTAMP}
    }
    {
      name:   sbt-util
      uri:    "https://github.com/sbt/util.git#1.0"
      set-version-suffix: ${TIMESTAMP}
    }
    {
      name:   sbt-librarymanagement
      uri:    "https://github.com/sbt/librarymanagement.git#1.0"
      set-version-suffix: ${TIMESTAMP}
    }
    {
      name:   sbt-website
      uri:    "https://github.com/sbt/website.git#1.0.x"
      set-version-suffix: ${TIMESTAMP}
    }
  ]
}

options.deploy: [{
  projects: [ sbt, zinc, sbt-io, sbt-util, sbt-librarymanagement, sbt-website ]
  uri: "bintray:/sbt/maven-snapshots/jenkins-sbt/"${TIMESTAMP}"#release"
  credentials: "/home/jenkinssbt/.bintray/.credentials"
}]

options.resolvers: {
  "R0000" : "local",
  "R0001" : "proxy-ch-maven: https://proxy-ch.typesafe.com:8082/artifactory/repo"
  "R0002" : "proxy-ch-ivy: https://proxy-ch.typesafe.com:8082/artifactory/repo, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]",
}
