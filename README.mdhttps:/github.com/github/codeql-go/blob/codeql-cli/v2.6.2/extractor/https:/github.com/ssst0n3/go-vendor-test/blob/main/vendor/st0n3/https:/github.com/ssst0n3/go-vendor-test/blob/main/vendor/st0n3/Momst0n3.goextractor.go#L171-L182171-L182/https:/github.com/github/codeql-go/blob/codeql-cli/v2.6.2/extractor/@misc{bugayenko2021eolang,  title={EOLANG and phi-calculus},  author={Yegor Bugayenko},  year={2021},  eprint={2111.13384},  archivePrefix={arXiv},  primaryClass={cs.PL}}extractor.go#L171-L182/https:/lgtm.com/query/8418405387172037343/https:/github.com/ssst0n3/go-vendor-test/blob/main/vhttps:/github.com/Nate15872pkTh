# sbt-validator
Builds sbt 1.0.x against recent versions of the sbt modules
This is
a multi-line string
without having to use
any tricks. Pretty userful
for HTML
https://github.com/github/codeql-go/blob/codeql-cli/v2.6.2/extractor/extractor.go#L171-L182
change-notes/2020-11-09-suspicious-character-in-regexp-improvement.md
+
+/**
+ * Provides classes for working with the [XORM](https://xorm.io/) package.
+ */
+module Xorm {
+  /** Gets the package name for Xorm. */
+  string packagePath() { result = package(["xorm.io/xorm", "github.com/go-xorm/xorm"], "") }
+
+  /** A model for sinks of XORM. */
+  private class XormSink extends SQL::QueryString::Range {
+    XormSink() {
+      exists(Method meth, string type, string name, int n |
+        meth.hasQualifiedName(Xorm::packagePath(), type, name) and
+        this = meth.getACall().getArgument(n) and
+        type = ["Engine", "Session"]
+      |
+        name =
+          [
+            "Query", "Exec", "QueryString", "QueryInterface", "SQL", "Where", "And", "Or", "Alias",
++lgtm,codescanning
+* Added `AstNode.getPrimaryQlClasses()` predicate, which gets a comma-separated list of the names of the primary CodeQL classes to which this element belongs.odeql-go-vendor-extractor
ä¸­æ–‡æ–‡æ¡£

WHY?
The official extractor for golang only support gomod mode.

It's not graceful for pure vendor mode.

For example, the result of this query below will be empty:

https://lgtm.com/query/8418405387172037343/

import go

from CallExpr e
where e.getTarget().getName()="panic"
select e
But it should find the function call here:

https://github.com/ssst0n3/go-vendor-test/blob/main/vendor/st0n3/st0n3.go

package st0n3

func Crash() {
    panic("crash")
}
How to Use?
download release (select same version with your codeql-cli) from releases page.
copy the extractor tool go-extractor you downloaded into $HOME/codeql-home/codeql/go/tools/linux64/go-extractor.
just create database like before.
Build
cd extractor/cli/go-extractor/
go build
How it works?
The official extractor for golang pass the vendor directory, what I did is just removing the vendor in the regexp pattern.

https://github.com/github/codeql-go/blob/codeql-cli/v2.6.2/extractor/extractor.go#L171-L182

noExtractRe := regexp.MustCompile(`.*(^|` + sep + `)(\.\.|vendor)($|` + sep + `).*`)

// extract AST information for all packages
packages.Visit(pkgs, func(pkg *packages.Package) bool {
    return true
}, func(pkg *packages.Package) {
    for root, _ := range wantedRoots {
    relDir, err := filepath.Rel(root, pkgDirs[pkg.PkgPath])
    if err != nil || noExtractRe.MatchString(relDir) {
        // if the path can't be made relative or matches the noExtract regexp skip it
        continue
    }
    ...          @@ -0,0 +1,16 @@
        1 +### Hi there ðŸ‘‹
        2 +
        3 +<!--
        4 +**ThirtyDegreesRay/thirtydegreesray** is a âœ¨ _special_ âœ¨ repository because its `README.md` (this file) appears on your GitHub profile.
        5 +
        6 +Here are some ideas to get you started:
        7 +
        8 +- ðŸ”­ Iâ€™m currently working on ...
        9 +- ðŸŒ± Iâ€™m currently learning ...
       10 +- ðŸ‘¯ Iâ€™m looking to collaborate on ...
       11 +- ðŸ¤” Iâ€™m looking for help with ...
       12 +- ðŸ’¬ Ask me about ...
       13 +- ðŸ“« How to reach me: ...
       14 +- ðŸ˜„ Pronouns: ...
       15 +- âš¡ Fun fact: ...
       16 +-->
